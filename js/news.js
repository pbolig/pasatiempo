/**
 * js/news.js
 * Contiene la l√≥gica para obtener, categorizar y mostrar noticias.
 * Depende de CONFIG (de js/config.js).
 */

// ==========================================
// FUNCIONES AUXILIARES DE NOTICIAS
// ==========================================

function normalizeTitle(title) {
    if (!title) return '';
    let cleanedTitle = title.toLowerCase().trim();

    // 1. Eliminar prefijos de fuentes comunes
    cleanedTitle = cleanedTitle.replace(/^(la naci[√≥o]n|clar[√≠i]n|infobae|p[√°a]gina 12|rosario3|la capital|el cronista|ambito|ol[√©√©]|tyc sports|espn)[\s\-\|:]+/i, '');

    // 2. Eliminar puntuaci√≥n excesiva al inicio/fin
    cleanedTitle = cleanedTitle.replace(/^[¬´¬ª"‚Äú'‚Äò\s]+|[¬´¬ª"‚Äù'‚Äô\s]+$/g, '');
    
    // 3. Limitar y asegurar una longitud m√≠nima
    return cleanedTitle.substring(0, 70);
}

function categorizeArticle(title, description) {
    const text = (title + ' ' + (description || '')).toLowerCase();
    
    // Categorizaci√≥n basada en palabras clave extendidas
    if (text.match(/policial|crimen|seguridad|robo|detenci[o√≥]n|delito|justicia|polic[i√≠]a|fiscal|asesinato|disparo|c[a√°]rcel|investigaci[o√≥]n|tribunal|fuga|tr[√°a]fico|estafa/)) return 'Policiales';
    if (text.match(/econom[i√≠]a|d[o√≥]lar|inflaci[o√≥]n|peso|banco|mercado|finanza|bolsa|bcra|pbi|tarjeta|cr[√©√©]dito|deuda|impuesto|exportaci[o√≥]n|importaci[o√≥]n|comercio/)) return 'Econom√≠a';
    if (text.match(/pol[i√≠]tica|gobierno|congreso|diputado|senador|elecci[o√≥]n|presidente|decreto|ley|sesi[o√≥]n|ministro|c[a√°]mara|juez|oposici[o√≥]n|oficialismo|votaci[o√≥]n/)) return 'Pol√≠tica';
    
    if (text.match(/cine|pel[i√≠]cula|estreno|film|actor|actriz|director|hollywood|oscar|festival de cine/)) return 'Cine';
    if (text.match(/espect[a√°]culo|televisi[o√≥]n|tv|programa|famoso|celebridad|show|far[a√°]ndula|artista|serie|netflix|prime|hbo/)) return 'Espect√°culos';
    if (text.match(/evento|festival|feria|exposici[o√≥]n|concierto|recital|presentaci[o√≥]n|muestra|agenda/)) return 'Eventos';
    
    if (text.match(/educaci[o√≥]n|universidad|escuela|estudiante|docente|maestro|profesor|examen|clase|matr[i√≠]cula|t[√≠i]tulo/)) return 'Educaci√≥n';
    if (text.match(/deporte|f[u√∫]tbol|racing|newells|boca|river|messi|mundial|copa|gol|tenis|rugby|basquet|club|gimnasia|liga/)) return 'Deportes';
    if (text.match(/arte|cultura|m[u√∫]sica|teatro|museo|galer[i√≠]a|pintura|danza|libro|escritor/)) return 'Arte y Cultura';
    if (text.match(/r[i√≠]o|paran[a√°]|pesca|inundaci[o√≥]n|bajante|ambiente|ecolog[i√≠]a|naturaleza|calentamiento|sequ[i√≠]a|contaminaci[o√≥]n/)) return 'R√≠o y Ambiente';
    if (text.match(/negocio|empresa|comercio|emprendimiento|trabajo|industria|pyme|inversi[o√≥]n|empleo|mercadotecnia/)) return 'Negocios';
    
    if (text.match(/tecnolog[i√≠]a|digital|internet|app|software|ia|inteligencia artificial|celular|smartphone|gadget|ciberseguridad/)) return 'Tecnolog√≠a';
    if (text.match(/salud|hospital|medicina|vacuna|enfermedad|covid|m[√©√©]dico|terapia|farmacia|alimentos|diet[a√°]/)) return 'Salud';
    
    return 'General';
}

function filterByLocation(articles, city) {
    const cityLower = city.toLowerCase();
    const province = getProvince(city);
    
    return articles.map(article => {
        const text = (article.title + ' ' + (article.description || '')).toLowerCase();
        let score = 0;
        
        if (text.includes(cityLower)) score += 10;
        if (province && text.includes(province.toLowerCase())) score += 5;
        if (text.match(/santa fe|rosario|paran[a√°]|c[√≥o]rdoba|mendoza|buenos aires/)) score += 3;
        if (text.match(/argentina|nacional/)) score += 1;
        
        return { ...article, relevanceScore: score };
    }).filter(a => a.relevanceScore > 0).sort((a, b) => b.relevanceScore - a.relevanceScore);
}

function getProvince(city) {
    const provinces = {
        'rosario': 'Santa Fe', 'santa fe': 'Santa Fe',
        'buenos aires': 'Buenos Aires', 'c√≥rdoba': 'C√≥rdoba', 'cordoba': 'C√≥rdoba',
        'mendoza': 'Mendoza', 'paran√°': 'Entre R√≠os', 'parana': 'Entre R√≠os',
        'la plata': 'Buenos Aires', 'mar del plata': 'Buenos Aires'
    };
    return provinces[city.toLowerCase()] || '';
}

// ==========================================
// FUNCIONES PRINCIPALES DE NOTICIAS
// ==========================================

async function loadNews(city, country) {
    const newsContent = document.getElementById('newsContent');
    
    // CONFIG deber√≠a ser globalmente accesible aqu√≠
    if (!CONFIG) {
        console.log('üîÑ CONFIG no encontrado. Intentando recargar...');
        CONFIG = await loadConfig(); 
    }

    if (CONFIG?.settings?.showLoadingProgress) {
        newsContent.innerHTML = '<div class="loading">üì∞ Cargando noticias de m√∫ltiples fuentes...</div>';
    }

    try {
        const allArticles = [];
        const loadingStats = {
            total: 0,
            success: 0,
            failed: 0,
            sources: []
        };

        console.log('üì° Iniciando carga de noticias...');

        await loadRSSFeeds(allArticles, loadingStats);
        await loadExternalAPIs(city, allArticles, loadingStats); // A√∫n solo GNews y NewsAPI

        console.log(`üìä Estad√≠sticas finales:
            - Total de fuentes intentadas: ${loadingStats.total}
            - Exitosas: ${loadingStats.success}
            - Fallidas: ${loadingStats.failed}
            - Art√≠culos totales: ${allArticles.length}
            - Fuentes exitosas: ${loadingStats.sources.join(', ')}
        `);

        if (allArticles.length > 0) {
            displayNews(allArticles, city);
        } else {
            throw new Error('No se pudieron cargar noticias de ninguna fuente');
        }
    } catch (error) {
        console.error('‚ùå Error en loadNews:', error);
        newsContent.innerHTML = `
            <div class="news-container">
                <div class="news-header">
                    <span style="font-size: 2em;">üì∞</span>
                    <h2 class="news-title">√öltimas Noticias</h2>
                </div>
                <p style="text-align: center; color: #666; padding: 40px;">
                    No se pudieron cargar las noticias en este momento.<br>
                    <small>Error: ${error.message}</small><br>
                    <small>Verifica la consola para m√°s detalles.</small>
                </p>
            </div>
        `;
    }
}

async function loadRSSFeeds(articlesArray, stats) {
    const allFeeds = [];
    
    if (!CONFIG?.rssFeeds) return;
    
    Object.entries(CONFIG.rssFeeds).forEach(([category, feeds]) => {
        feeds.forEach(feed => {
            if (feed.enabled) {
                allFeeds.push(feed);
            }
        });
    });

    stats.total += allFeeds.length;

    const promises = allFeeds.map(feed => loadSingleRSSFeed(feed, articlesArray, stats));
    await Promise.allSettled(promises);
}

async function loadSingleRSSFeed(feed, articlesArray, stats) {
    try {
        const apiKey = CONFIG.apis.rss2json.apiKey;
        const apiKeyParam = apiKey ? `&api_key=${apiKey}` : '';
        const rssUrl = `https://api.rss2json.com/v1/api.json?rss_url=${encodeURIComponent(feed.url)}${apiKeyParam}`;
        
        const controller = new AbortController();
        const timeoutId = setTimeout(() => controller.abort(), CONFIG.settings.requestTimeout || 8000);
        
        const response = await fetch(rssUrl, { 
            signal: controller.signal,
            headers: { 'Accept': 'application/json' }
        });
        
        clearTimeout(timeoutId);
        
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}`);
        }
        
        const data = await response.json();
        
        if (data.status === 'ok' && data.items && data.items.length > 0) {
            data.items.forEach(item => {
                item.sourceName = feed.name;
                articlesArray.push(item);
            });
            stats.success++;
            stats.sources.push(feed.name);
            console.log(`‚úÖ ${feed.name}: ${data.items.length} art√≠culos cargados`);
        } else {
            stats.failed++;
            console.log(`‚ö†Ô∏è ${feed.name}: Sin art√≠culos v√°lidos (status: ${data.status})`);
        }
    } catch (err) {
        stats.failed++;
        console.log(`‚ùå ${feed.name}: ${err.message}`);
    }
}

async function loadExternalAPIs(city, articlesArray, stats) {
    const apis = [
        {
            name: 'GNews',
            enabled: CONFIG.apis.gnews.enabled && CONFIG.apis.gnews.apiKey,
            load: () => loadGNewsAPI(city, articlesArray, stats)
        },
        {
            name: 'NewsAPI',
            enabled: CONFIG.apis.newsapi.enabled && CONFIG.apis.newsapi.apiKey,
            load: () => loadNewsAPI(city, articlesArray, stats)
        }
    ];

    const enabledAPIs = apis.filter(api => api.enabled);
    
    if (enabledAPIs.length > 0) {
        stats.total += enabledAPIs.length;
        const promises = enabledAPIs.map(api => api.load());
        await Promise.allSettled(promises);
    }
}

async function loadGNewsAPI(city, articlesArray, stats) {
    try {
        const apiKey = CONFIG.apis.gnews.apiKey;
        const url = `https://gnews.io/api/v4/search?q=${encodeURIComponent(city + ' OR Argentina')}&lang=es&country=ar&max=10&apikey=${apiKey}`;
        
        const response = await fetch(url);
        if (!response.ok) throw new Error(`HTTP ${response.status}`);
        
        const data = await response.json();
        
        if (data.articles) {
            data.articles.forEach(a => {
                articlesArray.push({
                    title: a.title,
                    description: a.description,
                    link: a.url,
                    pubDate: a.publishedAt,
                    thumbnail: a.image,
                    sourceName: a.source.name
                });
            });
            stats.success++;
            stats.sources.push('GNews');
            console.log(`‚úÖ GNews: ${data.articles.length} art√≠culos`);
        }
    } catch (err) {
        stats.failed++;
        console.log(`‚ùå GNews: ${err.message}`);
    }
}

async function loadNewsAPI(city, articlesArray, stats) {
    try {
        const apiKey = CONFIG.apis.newsapi.apiKey;
        const url = `https://newsapi.org/v2/everything?q=${encodeURIComponent(city + ' OR Argentina')}&language=es&sortBy=publishedAt&pageSize=20&apiKey=${apiKey}`;
        
        const response = await fetch(url);
        if (!response.ok) throw new Error(`HTTP ${response.status}`);
        
        const data = await response.json();
        
        if (data.articles) {
            data.articles.forEach(a => {
                articlesArray.push({
                    title: a.title,
                    description: a.description,
                    link: a.url,
                    pubDate: a.publishedAt,
                    thumbnail: a.urlToImage,
                    sourceName: a.source.name
                });
            });
            stats.success++;
            stats.sources.push('NewsAPI');
            console.log(`‚úÖ NewsAPI: ${data.articles.length} art√≠culos`);
        }
    } catch (err) {
        stats.failed++;
        console.log(`‚ùå NewsAPI: ${err.message}`);
    }
}


function displayNews(articles, city) {
    const newsContent = document.getElementById('newsContent');
    const maxPerCategory = CONFIG.settings.maxArticlesPerCategory || 12;
    
    console.log(`üìä Procesando ${articles.length} art√≠culos...`);
    
    const relevantArticles = filterByLocation(articles, city);
    console.log(`üìç Art√≠culos relevantes para ${city}: ${relevantArticles.length}`);
    
    const categorizedNews = {};
    
    relevantArticles.forEach(article => {
        const category = categorizeArticle(article.title, article.description);
        if (!categorizedNews[category]) categorizedNews[category] = [];
        categorizedNews[category].push(article);
    });

    console.log(`üìë Categor√≠as encontradas:`, Object.keys(categorizedNews).map(cat => `${cat} (${categorizedNews[cat].length})`).join(', '));

    // üí° APLICACI√ìN DE LA DESDUPLICACI√ìN INTELIGENTE
    Object.keys(categorizedNews).forEach(category => {
        const seen = new Set();
        categorizedNews[category] = categorizedNews[category].filter(article => {
            const key = normalizeTitle(article.title); 
            
            // Descartar si el t√≠tulo es muy corto o ya visto.
            if (!key || key.length < 10 || seen.has(key)) return false; 
            
            seen.add(key);
            return true;
        });
    });

    let html = `
        <div class="news-container">
            <div class="news-header">
                <span style="font-size: 2em;">üì∞</span>
                <div>
                    <h2 class="news-title">√öltimas Noticias</h2>
                    <p style="color: #666; margin: 5px 0 0 0;">
                        <strong>${city}</strong> ${getProvince(city) ? '‚Ä¢ ' + getProvince(city) : ''} ‚Ä¢ Argentina
                        <br><small>${relevantArticles.length} noticias de ${Object.keys(categorizedNews).length} categor√≠as</small>
                    </p>
                </div>
            </div>
    `;

    const categoryOrder = ['R√≠o y Ambiente', 'Cine', 'Espect√°culos', 'Eventos', 'Deportes', 'Policiales', 'Econom√≠a', 'Pol√≠tica', 'Educaci√≥n', 'Negocios', 'Arte y Cultura', 'Tecnolog√≠a', 'Salud', 'General'];
    const icons = {
        'Cine': 'üé¨', 'Espect√°culos': 'üé≠', 'Eventos': 'üé™', 
        'Econom√≠a': 'üí∞', 'Policiales': 'üöî', 'Educaci√≥n': 'üìö', 
        'Deportes': '‚öΩ', 'Arte y Cultura': 'üé®', 'R√≠o y Ambiente': 'üåä', 
        'Negocios': 'üè¢', 'Pol√≠tica': 'üèõÔ∏è', 'Tecnolog√≠a': 'üíª', 
        'Salud': 'üè•', 'General': 'üìÑ'
    };

    let hasNews = false;

    categoryOrder.forEach(category => {
        if (categorizedNews[category]?.length > 0) {
            hasNews = true;
            html += `
                <div class="category-section">
                    <div class="category-header">${icons[category]} ${category} (${categorizedNews[category].length})</div>
                    <div class="news-grid">`;
            
            categorizedNews[category].slice(0, maxPerCategory).forEach(article => {
                const title = article.title || 'Sin t√≠tulo';
                const desc = (article.description || '').replace(/<[^>]*>/g, '').substring(0, 180);
                const url = article.link || '#';
                const img = article.thumbnail || article.enclosure?.link || '';
                const source = article.sourceName || 'Desconocido';
                
                let date = 'Reciente';
                try {
                    const d = new Date(article.pubDate);
                    if (!isNaN(d.getTime())) {
                        date = d.toLocaleDateString('es-AR', {
                            day: 'numeric', 
                            month: 'short', 
                            hour: '2-digit', 
                            minute: '2-digit'
                        });
                    }
                } catch(e) {}

                html += `
                    <div class="news-card" onclick="window.open('${url}', '_blank')" title="Leer en ${source}">
                        ${img ? `<img src="${img}" class="news-image" onerror="this.style.display='none'" alt="${title}">` : '<div class="news-image"></div>'}
                        <div class="news-content">
                            <h3 class="news-card-title">${title}</h3>
                            <p class="news-description">${desc}${desc.length >= 180 ? '...' : ''}</p>
                            <div class="news-footer">
                                <span class="news-source">üì∞ ${source}</span>
                                <span>üìÖ ${date}</span>
                            </div>
                        </div>
                    </div>`;
            });
            
            html += '</div></div>';
        }
    });

    if (!hasNews) {
        html += '<p style="text-align:center;padding:40px;color:#666;">No se encontraron noticias para esta ubicaci√≥n.</p>';
    }

    html += '</div>';
    newsContent.innerHTML = html;
    console.log('‚úÖ Noticias mostradas correctamente');
}